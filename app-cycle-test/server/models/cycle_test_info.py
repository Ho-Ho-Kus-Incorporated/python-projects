# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from server.models.base_model_ import Model
from server import util


class CycleTestInfo(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, cycle_number: int=None, _date: str=None, part_number: str=None):  # noqa: E501
        """CycleTestInfo - a model defined in Swagger

        :param cycle_number: The cycle_number of this CycleTestInfo.  # noqa: E501
        :type cycle_number: int
        :param _date: The _date of this CycleTestInfo.  # noqa: E501
        :type _date: str
        :param part_number: The part_number of this CycleTestInfo.  # noqa: E501
        :type part_number: str
        """
        self.swagger_types = {
            'cycle_number': int,
            '_date': str,
            'part_number': str
        }

        self.attribute_map = {
            'cycle_number': 'cycle_number',
            '_date': 'date',
            'part_number': 'part_number'
        }
        self._cycle_number = cycle_number
        self.__date = _date
        self._part_number = part_number

    @classmethod
    def from_dict(cls, dikt) -> 'CycleTestInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The cycleTestInfo of this CycleTestInfo.  # noqa: E501
        :rtype: CycleTestInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cycle_number(self) -> int:
        """Gets the cycle_number of this CycleTestInfo.


        :return: The cycle_number of this CycleTestInfo.
        :rtype: int
        """
        return self._cycle_number

    @cycle_number.setter
    def cycle_number(self, cycle_number: int):
        """Sets the cycle_number of this CycleTestInfo.


        :param cycle_number: The cycle_number of this CycleTestInfo.
        :type cycle_number: int
        """
        if cycle_number is None:
            raise ValueError("Invalid value for `cycle_number`, must not be `None`")  # noqa: E501

        self._cycle_number = cycle_number

    @property
    def _date(self) -> str:
        """Gets the _date of this CycleTestInfo.


        :return: The _date of this CycleTestInfo.
        :rtype: str
        """
        return self.__date

    @_date.setter
    def _date(self, _date: str):
        """Sets the _date of this CycleTestInfo.


        :param _date: The _date of this CycleTestInfo.
        :type _date: str
        """

        self.__date = _date

    @property
    def part_number(self) -> str:
        """Gets the part_number of this CycleTestInfo.


        :return: The part_number of this CycleTestInfo.
        :rtype: str
        """
        return self._part_number

    @part_number.setter
    def part_number(self, part_number: str):
        """Sets the part_number of this CycleTestInfo.


        :param part_number: The part_number of this CycleTestInfo.
        :type part_number: str
        """
        if part_number is None:
            raise ValueError("Invalid value for `part_number`, must not be `None`")  # noqa: E501

        self._part_number = part_number
